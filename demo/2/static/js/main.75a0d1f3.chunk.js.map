{"version":3,"sources":["Components/FormAI.js","App.js","reportWebVitals.js","index.js"],"names":["FormAI","props","state","src","query","value","text","Container","className","Row","Col","sm","lg","this","alt","map","el","id","Button","variant","onClick","setState","selected","block","sendResponse","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAoFeA,E,kDAhFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,IAAI,4BACJC,MAAO,CACL,CACEC,MAAO,IACPC,KAAM,cAER,CACED,MAAO,IACPC,KAAM,cAER,CACED,MAAO,IACPC,KAAM,cAER,CACED,MAAO,IACPC,KAAM,gBAnBI,E,0CA+ClB,WAAU,IAAD,OAEP,OACE,cAACC,EAAA,EAAD,CAAWC,UAAU,OAArB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,qBAAKT,IAAKU,KAAKX,MAAMC,IAAKW,IAAI,mBAEhC,eAACJ,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACE,oBAAIJ,UAAU,OAAd,uCACA,qBAAKA,UAAU,UAAf,SAEIK,KAAKX,MAAME,MAAMW,KAAI,SAACC,EAAIC,GACxB,OAAO,cAACC,EAAA,EAAD,CAELC,QAAQ,QACRC,QAAS,kBAAK,EAAKC,SAAS,CAACC,SAAUN,EAAGX,SAC1CG,UAAY,EAAKN,MAAMoB,WAAaN,EAAGX,MAAS,SAAW,KAC3DkB,OAAK,EALA,SAKEP,EAAGV,MAJLW,WAUf,cAACP,EAAA,EAAD,CAAKC,GAAG,KAAKH,UAAU,OAAvB,SACE,cAACU,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAM,EAAKI,gBAAgBD,OAAK,EAAnE,uC,GAzESE,aCUNC,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCISmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.75a0d1f3.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {Container, Row, Col, Button} from 'react-bootstrap'\r\n\r\nclass FormAI extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      src:\"https://picsum.photos/450\",\r\n      query: [\r\n        {\r\n          value: \"x\",\r\n          text: \"Pulsante 1\"\r\n        },\r\n        {\r\n          value: \"y\",\r\n          text: \"Pulsante 2\"\r\n        },\r\n        {\r\n          value: \"z\",\r\n          text: \"Pulsante 3\"\r\n        },\r\n        {\r\n          value: \"p\",\r\n          text: \"Pulsante 4\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n\r\n  // Decomenttare una volta che si ha la \"route\" dell' API corretta, la funzione aggiorna il FE renderizzato con i dati del JSON in risposta\r\n\r\n  // ComponentDidMount(){\r\n  //   fetch('ROUTE')\r\n  //       .then(response => response.json())\r\n  //       .then(data => this.setState(data));\r\n  // }\r\n\r\n  // Funzione per inviare l'oggetto del form al backend, restituisce l'intero stato oltre al valore dell'opzione selezionata\r\n\r\n  // sendResponse = () => {\r\n  //    const requestOptions = {\r\n  //       method: 'POST',\r\n  //       headers: { 'Content-Type': 'application/json' },\r\n  //       body: JSON.stringify(this.state)\r\n  //   };\r\n  //   fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\r\n  //       .then(response => response.json())\r\n  //       .then(data => this.setState({ postId: data.id }));\r\n  // }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <Container className=\"pt-5\">\r\n        <Row>\r\n          <Col sm={12} lg={6}>\r\n            <img src={this.state.src} alt=\"what-is-this\" />\r\n          </Col>\r\n          <Col sm={12} lg={6}>\r\n            <h3 className=\"mb-3\">Cosa vedi nell' immagine?</h3>\r\n            <div className=\"options\">\r\n              {\r\n                this.state.query.map((el, id) => {\r\n                  return(<Button \r\n                    key={id} \r\n                    variant=\"light\" \r\n                    onClick={()=> this.setState({selected: el.value})} \r\n                    className={(this.state.selected === el.value) ? 'active' : null}\r\n                    block>{el.text}\r\n                  </Button>)\r\n                })\r\n              }\r\n            </div>\r\n          </Col>\r\n          <Col sm=\"12\" className=\"my-4\">\r\n            <Button variant=\"success\" onClick={() => this.sendResponse()} block>Invia risposta</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormAI;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss'\nimport FormAI from './Components/FormAI'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormAI />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}